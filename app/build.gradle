apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
import java.util.regex.Pattern

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        sign_test {
            storeFile file(RELEASE_KEYSTORE_LOCATION)
            keyAlias RELEASE_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            storePassword RELEASE_STORE_PASSWORD
        }
    }

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "kr.ac.snu.hcil.omnitrack"
        minSdkVersion 19
        targetSdkVersion rootProject.ext.targetSdkVersion
        //multidex support
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        def googleMapsKey = keystoreProperties.getProperty("GOOGLE_MAPS_API_KEY").toString()
        println(googleMapsKey)
        manifestPlaceholders = [GOOGLE_MAPS_API_KEY: googleMapsKey.replaceAll("\"", "").trim()]
    }


    applicationVariants.all { variant ->
        println("variant name: ${variant.name}")
        if(variant.name.toLowerCase().contains("release"))
        {
            variant.generateBuildConfig.dependsOn("refreshVersionsByIncreasingVersionCode")
        }
        else
            variant.generateBuildConfig.dependsOn("refreshVersionsNotRelease")
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            debuggable true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign_test
        }
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-Debug'
        }
    }
    buildTypes.each {
        buildType->
        buildType.buildConfigField 'String', 'OMNITRACK_SYNCHRONIZATION_SERVER_URL', OMNITRACK_SYNCHRONIZATION_SERVER_URL
        buildType.buildConfigField 'String', 'OMNITRACK_MEDIA_STORAGE_SERVER_URL', OMNITRACK_MEDIA_STORAGE_SERVER_URL

        keystoreProperties.keySet().forEach{
            buildType.buildConfigField 'String', it.toString(), keystoreProperties.getProperty(it)
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    lintOptions {
        checkReleaseBuilds false
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'

    }
}

kapt {
    generateStubs = true
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion rootProject.ext.android_support_version
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'

    implementation "com.android.support:appcompat-v7:$rootProject.ext.android_support_version"
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.android_support_version"
    implementation "com.android.support:design:$rootProject.ext.android_support_version"
    implementation "com.android.support:support-v4:$rootProject.ext.android_support_version"
    implementation "com.android.support:support-vector-drawable:$rootProject.ext.android_support_version"
    implementation "com.android.support:animated-vector-drawable:$rootProject.ext.android_support_version"
    implementation "com.google.android.gms:play-services-maps:$rootProject.ext.google_play_version"
    implementation "com.google.android.gms:play-services-places:$rootProject.ext.google_play_version"
    implementation "com.google.android.gms:play-services-fitness:$rootProject.ext.google_play_version"
    implementation "com.google.android.gms:play-services-gcm:$rootProject.ext.google_play_version"
    implementation "com.google.android.gms:play-services-plus:$rootProject.ext.google_play_version"
    implementation "com.google.android.gms:play-services-auth:$rootProject.ext.google_play_version"
    implementation "com.google.firebase:firebase-auth:$rootProject.ext.google_play_version"
    implementation "com.google.firebase:firebase-database:$rootProject.ext.google_play_version"
    implementation "com.google.firebase:firebase-storage:$rootProject.ext.google_play_version"
    implementation "com.google.firebase:firebase-config:$rootProject.ext.google_play_version"
    implementation "com.google.firebase:firebase-messaging:$rootProject.ext.google_play_version"
    implementation "com.google.firebase:firebase-crash:$rootProject.ext.google_play_version"
    implementation 'com.firebase:firebase-jobdispatcher:0.8.4'

    implementation "android.arch.lifecycle:extensions:1.0.0"
    kapt "android.arch.lifecycle:compiler:1.0.0"

    kapt 'com.android.databinding:compiler:3.0.1'

    implementation "org.jetbrains.anko:anko:0.10.2"

    implementation "com.google.dagger:dagger:$rootProject.ext.dagger_version"
    implementation "com.google.dagger:dagger-android:$rootProject.ext.dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.ext.dagger_version"
    kapt "com.google.dagger:dagger-compiler:$rootProject.ext.dagger_version"

    implementation project(':microsoft-band-1.3.20307.2')
    implementation project(':material_dialog_core')
    implementation project(':UpPlatformSdk')
    implementation project(':material_about')
    implementation project(':fancybuttons')
    implementation project(':TedBottomPicker:tedbottompicker')
    // https://mvnrepository.com/artifact/org.apache.commons/commons-math3

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation files('libs/opencsv-3.9.jar')
    implementation files('libs/jxl.jar')
    implementation 'com.android.support:multidex:1.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0-beta3'
    implementation 'com.google.android:flexbox:0.3.1'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'


    implementation 'jp.wasabeef:recyclerview-animators:2.2.7'
    implementation 'com.github.markushi:android-ui:1.2'
    implementation 'org.apmem.tools:layouts:1.10@aar'
    implementation 'com.beloo.widget:ChipsLayoutManager:0.3.7@aar'
    implementation 'com.github.ybq:Android-SpinKit:1.1.0'
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    implementation 'com.airbnb.android:lottie:2.2.5'

    implementation 'org.atteo:evo-inflector:1.2.2'
    implementation 'com.github.Epsiloni:android-target-tooltip:1.7'
    implementation 'us.feras.mdv:markdownview:1.1.0'
    implementation 'com.heinrichreimersoftware:material-intro:1.6.2'
    implementation 'com.jaredrummler:material-spinner:1.2.1'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.github.bumptech.glide:glide:4.3.1'
    kapt 'com.github.bumptech.glide:compiler:4.3.1'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'
    implementation 'com.wonderkiln:camerakit:0.12.0'
    implementation 'com.github.mukeshsolanki:country-picker-android:1.2.0'
    implementation 'com.patloew.rxlocation:rxlocation:1.0.3'
    implementation 'uk.co.samuelwall:material-tap-target-prompt:2.4.0'
    implementation 'com.wdullaer:materialdatetimepicker:3.4.0'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.0.5'

    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'

    compileOnly 'javax.annotation:jsr250-api:1.0'
    implementation 'com.larswerkman:lobsterpicker:1.0.1'
    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'
    implementation 'com.github.VictorAlbertos:RxActivityResult:0.4.5-2.x'
    implementation 'com.github.salomonbrys.kotson:kotson:2.5.0'
    implementation 'org.nield:kotlin-statistics:1.0.0'
    implementation 'com.shawnlin:number-picker:2.4.4'
}

repositories {
    jcenter()
    maven {
        url "http://dl.bintray.com/kotlin/exposed"
    }
    maven { url "https://jitpack.io" }

    maven {
        repositories {
            url 'https://oss.sonatype.org/content/repositories/releases/'
        }
    }

    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }

    maven { url 'https://maven.google.com' }
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'realm-android'

ext.refreshVersion = {
    increase->
        println("refresh versions.")
        def versionPropsFile = rootProject.file("version.properties")
        Properties versionProperties = new Properties()
        versionProperties.load(new FileInputStream(versionPropsFile))
        def releaseIncrease = increase ? 1 : 0

        def patternVersionNumber = Pattern.compile("(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)(\\s[a-zA-Z0-9]+)?")
        def matcherVersionNumber = patternVersionNumber.matcher(versionProperties["versionName"])
        matcherVersionNumber.find()
        def majorVersion = Integer.parseInt(matcherVersionNumber.group(1))
        def minorVersion = Integer.parseInt(matcherVersionNumber.group(2))
        def pointVersion = Integer.parseInt(matcherVersionNumber.group(3))
        def buildVersion = Integer.parseInt(matcherVersionNumber.group(4))
        def suffix = matcherVersionNumber.group(5)

        def versionName = majorVersion + "." + minorVersion + "." + (pointVersion + releaseIncrease) + "." + (buildVersion + 1) + suffix
        def versionCode = versionProperties["versionCode"].toInteger() + releaseIncrease
        versionProperties.setProperty("versionName", versionName)
        versionProperties.setProperty("versionCode", versionCode.toString())
        versionProperties.store(versionPropsFile.newWriter(), "auto-incremented version information.")

        android.defaultConfig.versionName = versionName
        android.defaultConfig.versionCode = versionCode
        android.applicationVariants.all {
            variant->
                variant.mergedFlavor.versionCode = versionCode
                variant.mergedFlavor.versionName = versionName
        }
        println("new versionName: ${versionName}, versionCode: ${versionCode}")

        android.applicationVariants.all {
            variant->
                variant.outputs.all{ output ->
                    outputFileName = "${variant.name}-${versionName}.apk"
                }
        }
}

task("refreshVersionsNotRelease") << {
    refreshVersion(false)
}

task("refreshVersionsByIncreasingVersionCode") << {
    refreshVersion(true)
}